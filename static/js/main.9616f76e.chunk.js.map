{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","resetTime","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","setState","React","Component","App","isClockVisible","clockName","showClock","hideClock","changeName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,YACLC,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OATP,gCAYE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAChCJ,QAAQC,IAAR,sBAA2BE,EAAUC,KAArC,eAAgDR,KAAKS,MAAMD,SAdjE,kCAkBE,WACEE,cAAcV,KAAKC,WAnBvB,uBAsBE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SAxBhB,oBA4BE,WACE,OACE,8BAAOC,KAAKH,MAAMC,KAAKQ,0BA9B7B,GAA2BM,IAAMC,WC8DlBC,G,kNA5DbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKN,SAAS,CACZI,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKP,SAAS,CACZI,gBAAgB,K,EAIpBI,WAAa,WACX,EAAKR,SAAS,CACZK,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WAAU,IAAD,EAC+BtB,KAAKH,MAAnCkB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CAEGR,EAAiB,kBAAC,EAAD,CAAOP,KAAMQ,IAAgB,IAEjD,yBAAKO,UAAU,gBACb,4BACEA,UAAU,uBACVC,KAAK,SACLC,QAASzB,KAAKiB,WAHhB,cAOA,4BACEM,UAAU,uBACVC,KAAK,SACLC,QAASzB,KAAKkB,WAHhB,cAOA,4BACEK,UAAU,uBACVC,KAAK,SACLC,QAASzB,KAAKmB,YAHhB,yB,GAhDQP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9616f76e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.resetTime();\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`New name of ${prevProps.name} is ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  resetTime() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <span>{this.state.date.toLocaleTimeString()}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  changeName = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 1000),\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>\n          Current time:\n          {isClockVisible ? <Clock name={clockName} /> : ''}\n        </p>\n        <div className=\"buttonsBlock\">\n          <button\n            className=\"buttonsBlock__button\"\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            className=\"buttonsBlock__button\"\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            className=\"buttonsBlock__button\"\n            type=\"button\"\n            onClick={this.changeName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}